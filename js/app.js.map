{"version":3,"file":"js/app.js?231a8dad2fe9c8adfc99","mappings":"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","sources":["webpack://WebpackProject/webpack/bootstrap","webpack://WebpackProject/webpack/runtime/make namespace object","webpack://WebpackProject/./src/js/libs/cookies.js","webpack://WebpackProject/./src/js/libs/modalized.js","webpack://WebpackProject/./src/js/modules/modals.js","webpack://WebpackProject/./src/js/app.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// возвращает куки с указанным name или undefined, если ничего не найдено\r\nexport function getCookie(name) {\r\n    let matches = document.cookie.match(new RegExp(\r\n        \"(?:^|; )\" + name.toString().replace(/([.$?*|{}()\\[\\]\\\\\\/+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n    ));\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function setCookie(name, value, options) {\r\n    options = {\r\n        path: '/',\r\n    };\r\n    if (options.expires instanceof Date) options.expires = options.expires.toUTCString();\r\n    let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\r\n    for (let optionKey in options) {\r\n        updatedCookie += \"; \" + optionKey;\r\n        let optionValue = options[optionKey];\r\n        if (optionValue !== true) updatedCookie += \"=\" + optionValue;\r\n    }\r\n    document.cookie = updatedCookie;\r\n}\r\n","import {visibleOverlay} from \"./overlay\";\r\nimport {getCookie, setCookie} from \"./cookies\"\r\n\r\nexport function Modalized(options) {\r\n    this.name = options.name;\r\n    this.overlay = options.overlay || false;\r\n    this.autoplay = options.autoplay || false;\r\n    this.autoplayTime = options.autoplayTime || 0;\r\n    this.autoplayOffsetTime = options.autoplayOffsetTime || 0;\r\n    this.customTitle = options.customTitle || false;\r\n    this.formName = options.formName || false;\r\n    initModals(this);\r\n    if (options.autoplay === true) openModalTimeout(this) // Если нужен автопоказ popup\r\n}\r\n\r\nfunction initModals(options) {\r\n    const modalsLink = document.querySelectorAll(`[data-modals-link=${options.name}]`);\r\n    //Блок проверок на ошибки\r\n    if (modalsLink.length === 0 && options.autoplay === false) return null\r\n\r\n    //Открытие popup\r\n    modalsLink.forEach((link) => {\r\n        link.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n            //Находим popup и ссылки на него. Если чего-то нет, показываем ошибку.\r\n            const modalName = link.getAttribute('data-modals-link');\r\n            const modalItem = document.querySelector(`[data-modals-type='${modalName}']`);\r\n            checkError('domItem', modalItem, `Not found popup ${options.name}`);\r\n            if (!modalItem) return null\r\n            modalItem.classList.add('_active');\r\n            if (options.overlay === true) visibleOverlay('show');\r\n            if (options.customTitle === true) changePopupName(link, modalItem);\r\n            if (options.formName === true) changeFormName(link, modalItem);\r\n            closeModal(modalItem, options);\r\n        })\r\n    })\r\n}\r\n\r\n//Открытие popup по времени\r\nfunction openModalTimeout(options) {\r\n    //Находим popup. Если нет, то показываем ошибку. Также делается проверка на наличие cookies\r\n    const modalItem = document.querySelector(`[data-modals-type='${options.name}']`);\r\n    if (!modalItem || getCookie(options.name)) {\r\n        checkError('domArray', modalItem, `Not found popup ${options.name}`);\r\n        return null\r\n    }\r\n\r\n    setTimeout(() => {\r\n        modalItem.classList.add('_active');\r\n        if (options.overlay === true) visibleOverlay('show', options);\r\n        closeModal(modalItem, options);\r\n    }, options.autoplayTime)\r\n}\r\n\r\n//Закрытие popup\r\nfunction closeModal(item, options = null) {\r\n    const arr = item.querySelectorAll('.js-close-modal')\r\n    const arr2 = item.querySelectorAll('.js-close-modal-cookies-only')\r\n    if (arr.length === 0 && arr2.length === 0) return null;\r\n    arr.forEach(closeItem => {\r\n        closeItem.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n            item.classList.remove('_active');\r\n            visibleOverlay('hide');\r\n            removeEventListener('click', closeModal);\r\n            if (options.autoplay === true) {\r\n                setCookie(options.name, 'true', {secure: true, 'max-age': options.autoplayOffsetTime});\r\n            }\r\n        })\r\n    })\r\n\r\n    //Запоминание, что popup больше не должен появляться. Без закрытия\r\n    arr2.forEach(closeItem => {\r\n        closeItem.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n            if (options.autoplay === true) {\r\n                setCookie(options.name, 'true', {secure: true, 'max-age': options.autoplayOffsetTime});\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n//Замена названия popup\r\nfunction changePopupName(link, modal) {\r\n    const titlePopup = link.getAttribute('data-modals-title');\r\n    const titleField = modal.querySelector('.js-modal-title');\r\n    if (titleField) titleField.textContent = titlePopup;\r\n\r\n}\r\n\r\n//Замена названия формы\r\nfunction changeFormName(link, modal) {\r\n    const formName = link.getAttribute('data-modals-form-name');\r\n    const inputFormName = modal.querySelector(\"[name='form_name']\");\r\n    if (inputFormName) inputFormName.value = formName;\r\n}\r\n\r\n//Управление видимостью popup для внешних и внутренних модулей\r\nexport function visibleModal(visible = 'toggle', modalName = null) {\r\n    let modals = document.querySelectorAll('.modal');\r\n    switch (visible) {\r\n        case 'show':\r\n            modals.forEach((item) => {\r\n                if(item.getAttribute('data-modals-type') === modalName) {\r\n                    item.classList.add('_active');\r\n                    closeModal(item)\r\n                    visibleOverlay('show')\r\n                }\r\n            });\r\n            break;\r\n        case 'hide':\r\n            modals.forEach((item) => {\r\n                item.classList.remove('_active');\r\n            });\r\n            break;\r\n        default:\r\n            modals.forEach((item) => {\r\n                item.classList.toggle('_active');\r\n            });\r\n    }\r\n}\r\n\r\nfunction checkError(type, item, text) {\r\n    let commonError = '',\r\n        error = null;\r\n    if (type === 'domArray' && item.length === 0) {\r\n        commonError = new Error(text);\r\n        error = true;\r\n    } else if (type === 'domItem' && !item) {\r\n        commonError = new Error(text);\r\n        error = true;\r\n    }\r\n    if (error === true) {\r\n        console.error(commonError.stack)\r\n        return true\r\n    }\r\n}\r\n","import {Modalized} from \"../libs/modalized\";\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    /**\r\n     * name — уникальное название popup\r\n     * overlay — использовать overlay (нужно добавить компонент overlay в проект)\r\n     * autoplay — открытие popup по времени\r\n     * autoplayTime — время через которое откроется popup. Время указывается в мс. 1 сек = 1 000 мс.\r\n     * autoplayOffsetTime — время в секундах на которое нужно сохранить закрытым popup.\r\n     * customTitle — замена заголовка (ищет название по data-modals-title на кнопке)\r\n     * formName — замена скрытого поля с названием формы (ищет название по data-modals-form-name на кнопке)\r\n     * @type {Modalized}\r\n     */\r\n    const modalCallback = new Modalized({\r\n        name: 'callback',\r\n        overlay: true\r\n    })\r\n/*    const modalCallback2 = new Modalized({\r\n        name: 'callback2',\r\n        overlay: true,\r\n        autoplay: true,\r\n        autoplayTime: 1000,\r\n        autoplayOffsetTime: 86400\r\n    })*/\r\n})\r\n","import mobileSide from './modules/mobileSide';\r\nimport modals from './modules/modals';\r\n\r\nrequire('./scripts');\r\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","r","Symbol","toStringTag","Object","defineProperty","value","setCookie","name","options","path","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","document","cookie","Modalized","this","overlay","autoplay","autoplayTime","autoplayOffsetTime","customTitle","formName","modalsLink","querySelectorAll","concat","length","forEach","link","addEventListener","e","preventDefault","modalName","getAttribute","modalItem","querySelector","checkError","classList","add","visibleOverlay","modal","titlePopup","titleField","textContent","changePopupName","inputFormName","changeFormName","closeModal","initModals","matches","match","RegExp","toString","replace","decodeURIComponent","setTimeout","openModalTimeout","item","arguments","arr","arr2","closeItem","remove","removeEventListener","secure","type","text","commonError","error","Error","console","stack","require"],"sourceRoot":""}